import { useState, useEffect } from "react";
import { ThemeProvider } from "styled-components";
import Head from "next/head";

//Components
import { lightTheme, darkTheme, GlobalStyles } from "@/lib/style/themeConfig";
import PageHeader from "@/components/menu/PageHeader";

export default function App({ Component, pageProps }) {
  const [theme, setTheme] = useState("dark");

  useEffect(() => {
    const storedTheme = localStorage.getItem("theme-preference");
    if (storedTheme) {
      setTheme(storedTheme);
    } else {
      const systemPrefersDark = window.matchMedia("(prefers-color-scheme: dark)").matches;
      setTheme(systemPrefersDark ? "dark" : "light");
    }

    window
      .matchMedia("(prefers-color-scheme: dark)")
      .addEventListener("change", handleSystemThemeChange);

    return () => {
      window
        .matchMedia("(prefers-color-scheme: dark)")
        .removeEventListener("change", handleSystemThemeChange);
    };
  }, []);

  function handleSystemThemeChange(event) {
    const newTheme = event.matches ? "dark" : "light";
    setTheme(newTheme);
    localStorage.setItem("theme-preference", newTheme);
  }

  const toggleTheme = () => {
    const newTheme = theme === "light" ? "dark" : "light";
    setTheme(newTheme);
    localStorage.setItem("theme-preference", newTheme);
  };

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <ThemeProvider theme={theme === "light" ? lightTheme : darkTheme}>
        <GlobalStyles />
        <PageHeader toggleTheme={toggleTheme} theme={theme} />
        <main>
          <Component {...pageProps} />
        </main>
      </ThemeProvider>
    </>
  );
}
